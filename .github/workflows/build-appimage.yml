name: Build AppImage

on:
  push:
    tags:
      - 'v*'  # Run only when a tag starting with 'v' is pushed
  workflow_dispatch:  # Keep manual trigger option

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libfuse2 wget

    - name: Create AppDir structure
      run: |
        mkdir -p AppDir/usr/bin
        mkdir -p AppDir/usr/share/applications
        mkdir -p AppDir/usr/share/icons/hicolor/scalable/apps
        mkdir -p AppDir/etc
        
        # Copy proxy.sh to AppDir
        cp proxy.sh AppDir/usr/bin/
        chmod +x AppDir/usr/bin/proxy.sh
        
        # Copy proxychains4.conf to AppDir
        cp proxychains4.conf.temp AppDir/etc/proxychains4.conf
        
        # Copy icon
        cp loupvagabond.svg AppDir/usr/share/icons/hicolor/scalable/apps/
        
        # Create AppRun
        cat > AppDir/AppRun << 'EOF'
        #!/bin/bash
        
        # Get the directory where AppRun is located
        APPDIR="$(dirname "$(readlink -f "$0")")"
        
        # Check for required dependencies
        check_dependencies() {
            local missing_deps=()
            
            if ! command -v zenity &>/dev/null; then
                missing_deps+=("zenity")
            fi
            
            if ! command -v tor &>/dev/null; then
                missing_deps+=("tor")
            fi
            
            if ! command -v proxychains4 &>/dev/null; then
                missing_deps+=("proxychains4")
            fi
            
            if [ ${#missing_deps[@]} -gt 0 ]; then
                zenity --error --title="Missing Dependencies" --text="The following required dependencies are missing:\n\n$(printf "â€¢ %s\n" "${missing_deps[@]}")\n\nPlease install them and try again." --width=400
                exit 1
            fi
        }
        
        # Copy proxychains4.conf if needed
        setup_proxychains_config() {
            if [ -f "$APPDIR/etc/proxychains4.conf" ]; then
                # Check if we have write permission to /etc
                if [ -w "/etc" ]; then
                    # Backup existing config if it exists
                    if [ -f "/etc/proxychains4.conf" ]; then
                        cp -f "/etc/proxychains4.conf" "/etc/proxychains4.conf.backup"
                    fi
                    
                    # Copy our config
                    cp -f "$APPDIR/etc/proxychains4.conf" "/etc/proxychains4.conf"
                else
                    # Try with pkexec
                    if command -v pkexec &>/dev/null; then
                        if zenity --question --title="Administrator Privileges Required" --text="LoupVagabond needs to copy its proxychains4 configuration to /etc/proxychains4.conf.\n\nDo you want to continue?" --width=400; then
                            if ! pkexec cp -f "$APPDIR/etc/proxychains4.conf" "/etc/proxychains4.conf"; then
                                zenity --error --title="Configuration Error" --text="Failed to copy proxychains4.conf. The application may not work correctly." --width=400
                            fi
                        else
                            zenity --warning --title="Configuration Skipped" --text="Proxychains4 configuration was not updated. The application may not work correctly." --width=400
                        fi
                    else
                        zenity --error --title="Configuration Error" --text="Cannot copy proxychains4.conf to /etc. The application may not work correctly." --width=400
                    fi
                fi
            fi
        }
        
        # Create desktop shortcut
        create_desktop_shortcut() {
            if zenity --question --title="Create Desktop Shortcut" --text="Would you like to create a desktop shortcut for LoupVagabond?" --width=400; then
                # Get username
                USERNAME=$(whoami)
                
                # Create .icons directory if it doesn't exist
                mkdir -p "/home/$USERNAME/.icons"
                
                # Copy icon
                cp -f "$APPDIR/usr/share/icons/hicolor/scalable/apps/loupvagabond.svg" "/home/$USERNAME/.icons/"
                
                # Create desktop file
                DESKTOP_FILE="/home/$USERNAME/.local/share/applications/loupvagabond.desktop"
                mkdir -p "/home/$USERNAME/.local/share/applications"
                
                # Copy and modify desktop file
                cp -f "$APPDIR/usr/share/applications/loupvagabond.desktop" "$DESKTOP_FILE"
                
                # Update Exec path in desktop file
                sed -i "s|Exec=.*|Exec=$APPDIR/AppRun|g" "$DESKTOP_FILE"
                
                # Make desktop file executable
                chmod +x "$DESKTOP_FILE"
                
                zenity --info --title="Shortcut Created" --text="Desktop shortcut has been created successfully." --width=400
            fi
        }
        
        # Main function
        main() {
            # Check dependencies
            check_dependencies
            
            # Setup proxychains config
            setup_proxychains_config
            
            # Offer to create desktop shortcut (only first time)
            SHORTCUT_MARKER="/home/$(whoami)/.config/loupvagabond/shortcut_created"
            if [ ! -f "$SHORTCUT_MARKER" ]; then
                create_desktop_shortcut
                mkdir -p "$(dirname "$SHORTCUT_MARKER")"
                touch "$SHORTCUT_MARKER"
            fi
            
            # Launch the application
            "$APPDIR/usr/bin/proxy.sh"
        }
        
        # Run the main function
        main
        EOF
        
        chmod +x AppDir/AppRun
        
        # Create desktop file
        cat > AppDir/usr/share/applications/loupvagabond.desktop << EOF
        [Desktop Entry]
        Type=Application
        Name=LoupVagabond
        Exec=proxy.sh
        Icon=loupvagabond
        Hidden=false
        NoDisplay=false
        Terminal=false
        Comment=Open Librewolf via proxychains4 and Tor for anonymous browsing
        Categories=Network;Security;Privacy;
        EOF

    - name: Download AppImage tools
      run: |
        wget -c https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage

    - name: Build AppImage
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        ./appimagetool-x86_64.AppImage AppDir LoupVagabond-${VERSION}-x86_64.AppImage

    - name: Upload AppImage to Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: LoupVagabond-*-x86_64.AppImage 