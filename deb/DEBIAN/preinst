#!/bin/bash
# This script will run before unpacking the new package
set +e  # Continue even if errors occur

echo "LoupVagabond pre-installation cleaning..."

# Kill any running processes
pkill -f loupvagabond 2>/dev/null || true
sleep 1
pkill -9 -f loupvagabond 2>/dev/null || true

# Remove all files from previous installations
echo "Cleaning up any previous installation files..."
rm -f /usr/local/bin/loupvagabond 2>/dev/null || true
rm -f /usr/bin/loupvagabond 2>/dev/null || true
rm -f /usr/share/applications/loupvagabond.desktop 2>/dev/null || true
rm -f /usr/share/icons/hicolor/*/apps/loupvagabond.* 2>/dev/null || true
rm -f /usr/share/pixmaps/loupvagabond.* 2>/dev/null || true

# Clean up temp files
rm -rf /tmp/brave_proxy_* /tmp/chrome_proxy_* 2>/dev/null || true

# Check if we need to manually fix dpkg database
if grep -q "loupvagabond.*half-configured\|loupvagabond.*half-installed\|loupvagabond.*unpacked" /var/lib/dpkg/status 2>/dev/null; then
    echo "WARNING: Detected broken package state in dpkg database, attempting to fix..."
    # Try to edit the dpkg status file to remove the problematic entry
    # Create backup first
    cp /var/lib/dpkg/status /var/lib/dpkg/status.bak.$(date +%s) 2>/dev/null || true
    
    # Use sed with buffer to modify the file
    sed -i '/^Package: loupvagabond$/,/^$/d' /var/lib/dpkg/status 2>/dev/null || true
    
    echo "NOTE: If installation still fails, you may need to manually edit /var/lib/dpkg/status"
    echo "      and remove the entire section for the loupvagabond package."
fi

# Exit cleanly - we want this script to always succeed
echo "Pre-installation cleanup complete."
exit 0
